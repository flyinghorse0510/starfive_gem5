////////////////////////////////////////////////////////////////////////////
// Transitions
////////////////////////////////////////////////////////////////////////////
transition({I,RU,RSC,RSD,RUSC,RUSD,
             BUSY_INTR,BUSY_BLKD}, AllocRequest) {
  AllocateTBE_Request;
}
 
transition({I,RU,RSC,RSD,RUSC,RUSD,
            BUSY_INTR,BUSY_BLKD}, AllocRequestWithCredit) {
  AllocateTBE_Request_WithCredit;
}

transition(I, {ReadShared,ReadNotSharedDirty}, BUSY_BLKD) {
  Initiate_Request;
  Initiate_ReadNoSnp;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition({RSC,RUSC}, {ReadShared,ReadNotSharedDirty}, BUSY_BLKD) {
  Initiate_Request;
  Initiate_ReadShared_HitUpstream_NoOwner;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition({RU,RSD,RUSD}, {ReadShared,ReadNotSharedDirty}, BUSY_BLKD) {
  Initiate_Request;
  Initiate_ReadShared_HitUpstream;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition({BUSY_BLKD,BUSY_INTR}, {ReadShared, ReadNotSharedDirty, ReadUnique_PoC, 
                                   WriteBackFull, WriteEvictFull}) {
  StallRequest;
}

transition(I, ReadUnique_PoC, BUSY_BLKD) {
  Initiate_Request;
  Initiate_ReadUnique_Miss;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition(BUSY_BLKD, SendReadNoSnp, BUSY_INTR) {
  Pop_TriggerQueue;
  Send_ReadNoSnp;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendCompDBIDResp) {
  Pop_TriggerQueue;
  Send_CompDBIDResp;
  ProcessNextState_ClearPending;
}

transition(RU, WriteBackFull, BUSY_BLKD) {
  Initiate_Request;
  Initiate_CopyBack;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition(RU, WriteEvictFull, BUSY_BLKD) {
  Initiate_Request;
  Initiate_CopyBack;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

// waiting for data
transition(BUSY_BLKD,
           {CBWrData_SD_PD,CBWrData_UD_PD, CBWrData_I, CBWrData_SC, CBWrData_UC}) {
  Receive_ReqDataResp;
  UpdateDirState_FromReqDataResp;
  UpdateDataState_FromReqDataResp;
  Pop_DataInQueue;
  ProcessNextState;
}

transition({BUSY_INTR, BUSY_BLKD}, WaitCompAck) {
  Pop_TriggerQueue;
  ExpectCompAck;
  ProcessNextState_ClearPending;
}

// May get here from BUSY_INTR
transition({BUSY_BLKD,BUSY_INTR}, SendCompData, BUSY_BLKD) {
  Pop_TriggerQueue;
  Send_CompData;
  ProcessNextState_ClearPending;
}

// Evict from Upstream
transition({RSC,RSD,RUSD,RUSC}, Evict, BUSY_BLKD) {
  Initiate_Request;
  Initiate_Evict;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition(BUSY_BLKD, SendCompIResp) {
  Pop_TriggerQueue;
  Send_CompI;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendWriteNoSnp, BUSY_INTR) {
  Pop_TriggerQueue;
  Send_WriteNoSnp;
  ProcessNextState_ClearPending;
}

// waiting for WB or evict ack
transition(BUSY_INTR,
           {CompDBIDResp, Comp_I}, BUSY_BLKD) {
  Receive_ReqResp;
  // Profile_OutgoingEnd_DatalessResp;
  Pop_RespInQueue;
  ProcessNextState;
}

transition({BUSY_BLKD,BUSY_INTR}, {CompData_UC},
            BUSY_BLKD) {
  Receive_RespSepDataFromCompData;
  Receive_ReqDataResp;
  UpdateDataState_FromReqDataResp;
  Profile_OutgoingEnd_DataResp;
  Pop_DataInQueue;
  ProcessNextState;
}

transition(BUSY_BLKD, TX_Data) {
  Pop_TriggerQueue;
  Send_Data;
  ProcessNextState_ClearPending;
}

transition({BUSY_INTR,BUSY_BLKD}, CompAck) {
  Receive_ReqResp;
  UpdateDirState_FromReqResp;
  Pop_RespInQueue;
  ProcessNextState;
}

// Finalization transition
transition({BUSY_BLKD,BUSY_INTR}, Final, *) {
  Pop_TriggerQueue;
  Finalize_UpdateDirectoryFromTBE;
  Finalize_DeallocateRequest;
}

// CleanUnique

transition({I, RU, RSC, RSD, RUSD, RUSC}, CleanUnique, BUSY_BLKD) {
  Initiate_Request;
  Initiate_CleanUnique;
  Pop_ReqRdyQueue;
  ProcessNextState;
}

transition(BUSY_BLKD, FinishCleanUnique) {
  Pop_TriggerQueue;
  Finish_CleanUnique;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendSnpCleanInvalidNoReq) {
  Pop_TriggerQueue;
  Send_SnpCleanInvalid_NoReq;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendCompUCRespStale) {
  Pop_TriggerQueue;
  Send_CompUC_Stale;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendCompUCResp) {
  Pop_TriggerQueue;
  Send_CompUC;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, MaintainCoherence) {
  Pop_TriggerQueue;
  Initiate_MaintainCoherence;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, SendWBData) {
  Pop_TriggerQueue;
  Send_WBData;
  ProcessNextState_ClearPending;
}

// Retry related
transition({I,RSC,RSD,RUSD,RUSC,RU
            BUSY_INTR,BUSY_BLKD}, SendRetryAck) {
  Send_RetryAck;
  Pop_RetryTriggerQueue;
}

transition({I,RSC,RSD,RUSD,RUSC,RU
            BUSY_INTR,BUSY_BLKD}, SendPCrdGrant) {
  Send_PCrdGrant;
  Pop_RetryTriggerQueue;
}

// SnoopFilter Repl
transition({I,RU,RSC,RSD,RUSD,RUSC,
            BUSY_INTR,BUSY_BLKD}, WaitForSnoopFilterRepl) {
  StallRequest_OnSnoopFilterRepl;
}

transition({I,RU,RSC,RSD,RUSD,RUSC,
            BUSY_INTR,BUSY_BLKD}, WaitForSnoopFilterRepl_Pend) {
  StallRequest_OnSnoopFilterRepl_Pend;
}

transition({RSD,RUSD,RU}, SnoopFilterEviction, BUSY_BLKD) {SfReplTBEAvailable} {
  Initiate_SnoopFilterReplacement;
  Initiate_SnoopFilterReplacement_WB_BackInv;
  Profile_SnoopFilterMiss;
  Pop_SFReplTriggerQueue;
  ProcessNextState;
}

transition({RUSC, RSC}, SnoopFilterEviction, BUSY_BLKD) {SfReplTBEAvailable} {
  Initiate_SnoopFilterReplacement;
  Initiate_SnoopFilterReplacement_Evict_BackInv;
  Profile_SnoopFilterMiss;
  Pop_SFReplTriggerQueue;
  ProcessNextState;
}

transition({BUSY_BLKD,BUSY_INTR}, SnoopFilterEviction) {
  StallSnoopFilterEviction;
}

transition(BUSY_BLKD, SendSnpCleanInvalid) {
  Pop_TriggerQueue;
  Send_SnpCleanInvalid;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, ResetAndDeallocDirEntry) {
  Pop_TriggerQueue;
  Reset_DirEntry;
  Deallocate_DirEntry;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD,
           {SnpRespData_I_PD,SnpRespData_I,SnpRespData_SC_PD,
            SnpRespData_SC,SnpRespData_SD,SnpRespData_UC,SnpRespData_UD,
            SnpRespData_SC_Fwded_SC,SnpRespData_SC_Fwded_SD_PD,
            SnpRespData_SC_PD_Fwded_SC,SnpRespData_I_Fwded_SD_PD,
            SnpRespData_I_PD_Fwded_SC,SnpRespData_I_Fwded_SC}) {
  Receive_SnpDataResp;
  UpdateDirState_FromSnpDataResp;
  UpdateDataState_FromSnpDataResp;
  Pop_DataInQueue;
  ProcessNextState;
}

transition(BUSY_BLKD, SnoopFilterHAWB) {
  Pop_TriggerQueue;
  Start_SnoopFilterWriteBack;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD, WakeUpEvictingSnoopFilterAddr) {
  Pop_TriggerQueue;
  Assert_NoDirEntry;
  WakeUp_EvictingSnoopFilterAddr;
  ProcessNextState_ClearPending;
}

transition(BUSY_BLKD,
           {SnpResp_I,SnpResp_SC,
            SnpResp_I_Fwded_UC,SnpResp_I_Fwded_UD_PD,
            SnpResp_SC_Fwded_SC,SnpResp_SC_Fwded_SD_PD,
            SnpResp_UC_Fwded_I,SnpResp_UD_Fwded_I,
            SnpResp_SC_Fwded_I,SnpResp_SD_Fwded_I}) {
  Receive_SnpResp;
  UpdateDirState_FromSnpResp;
  Pop_RespInQueue;
  ProcessNextState;
}
